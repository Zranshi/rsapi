// Code generated by goctl. DO NOT EDIT.
// Source: codec.proto

package codecclient

import (
	"context"

	"rsapi/devtoys/rpc/codec/codec"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = codec.Request
	Response = codec.Response

	Codec interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultCodec struct {
		cli zrpc.Client
	}
)

func NewCodec(cli zrpc.Client) Codec {
	return &defaultCodec{
		cli: cli,
	}
}

func (m *defaultCodec) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := codec.NewCodecClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
