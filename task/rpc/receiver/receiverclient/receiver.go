// Code generated by goctl. DO NOT EDIT.
// Source: receiver.proto

package receiverclient

import (
	"context"

	"rsapi/task/rpc/receiver/receiver"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = receiver.Request
	Response = receiver.Response

	Receiver interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultReceiver struct {
		cli zrpc.Client
	}
)

func NewReceiver(cli zrpc.Client) Receiver {
	return &defaultReceiver{
		cli: cli,
	}
}

func (m *defaultReceiver) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := receiver.NewReceiverClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
