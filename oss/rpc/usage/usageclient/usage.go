// Code generated by goctl. DO NOT EDIT.
// Source: usage.proto

package usageclient

import (
	"context"

	"rsapi/oss/rpc/usage/usage"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = usage.Request
	Response = usage.Response

	Usage interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultUsage struct {
		cli zrpc.Client
	}
)

func NewUsage(cli zrpc.Client) Usage {
	return &defaultUsage{
		cli: cli,
	}
}

func (m *defaultUsage) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := usage.NewUsageClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
