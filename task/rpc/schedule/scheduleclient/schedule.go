// Code generated by goctl. DO NOT EDIT.
// Source: schedule.proto

package scheduleclient

import (
	"context"

	"rsapi/task/rpc/schedule/schedule"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = schedule.Request
	Response = schedule.Response

	Schedule interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultSchedule struct {
		cli zrpc.Client
	}
)

func NewSchedule(cli zrpc.Client) Schedule {
	return &defaultSchedule{
		cli: cli,
	}
}

func (m *defaultSchedule) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := schedule.NewScheduleClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
