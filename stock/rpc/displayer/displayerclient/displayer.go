// Code generated by goctl. DO NOT EDIT.
// Source: displayer.proto

package displayerclient

import (
	"context"

	"rsapi/stock/rpc/displayer/displayer"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = displayer.Request
	Response = displayer.Response

	Displayer interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultDisplayer struct {
		cli zrpc.Client
	}
)

func NewDisplayer(cli zrpc.Client) Displayer {
	return &defaultDisplayer{
		cli: cli,
	}
}

func (m *defaultDisplayer) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := displayer.NewDisplayerClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
