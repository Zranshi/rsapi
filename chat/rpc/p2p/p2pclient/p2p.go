// Code generated by goctl. DO NOT EDIT.
// Source: p2p.proto

package p2pclient

import (
	"context"

	"rsapi/chat/rpc/p2p/p2p"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = p2p.Request
	Response = p2p.Response

	P2p interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultP2p struct {
		cli zrpc.Client
	}
)

func NewP2p(cli zrpc.Client) P2p {
	return &defaultP2p{
		cli: cli,
	}
}

func (m *defaultP2p) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := p2p.NewP2PClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
