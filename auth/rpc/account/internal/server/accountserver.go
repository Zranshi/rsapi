// Code generated by goctl. DO NOT EDIT.
// Source: account.proto

package server

import (
	"context"

	"rsapi/auth/rpc/account/account"
	"rsapi/auth/rpc/account/internal/logic"
	"rsapi/auth/rpc/account/internal/svc"
)

type AccountServer struct {
	svcCtx *svc.ServiceContext
	account.UnimplementedAccountServer
}

func NewAccountServer(svcCtx *svc.ServiceContext) *AccountServer {
	return &AccountServer{
		svcCtx: svcCtx,
	}
}

func (s *AccountServer) Login(ctx context.Context, in *account.LoginReq) (*account.LoginRes, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *AccountServer) Register(ctx context.Context, in *account.RegisterReq) (*account.RegisterRes, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *AccountServer) Logout(ctx context.Context, in *account.LogoutReq) (*account.LogoutRes, error) {
	l := logic.NewLogoutLogic(ctx, s.svcCtx)
	return l.Logout(in)
}

func (s *AccountServer) Info(ctx context.Context, in *account.InfoReq) (*account.InfoRes, error) {
	l := logic.NewInfoLogic(ctx, s.svcCtx)
	return l.Info(in)
}

func (s *AccountServer) Edit(ctx context.Context, in *account.EditReq) (*account.EditRes, error) {
	l := logic.NewEditLogic(ctx, s.svcCtx)
	return l.Edit(in)
}

func (s *AccountServer) Signout(ctx context.Context, in *account.SignOutReq) (*account.SignOutRes, error) {
	l := logic.NewSignoutLogic(ctx, s.svcCtx)
	return l.Signout(in)
}
