// Code generated by goctl. DO NOT EDIT.
// Source: rank.proto

package rankclient

import (
	"context"

	"rsapi/recommend/rpc/rank/rank"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = rank.Request
	Response = rank.Response

	Rank interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultRank struct {
		cli zrpc.Client
	}
)

func NewRank(cli zrpc.Client) Rank {
	return &defaultRank{
		cli: cli,
	}
}

func (m *defaultRank) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := rank.NewRankClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
