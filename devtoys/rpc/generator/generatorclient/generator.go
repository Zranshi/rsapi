// Code generated by goctl. DO NOT EDIT.
// Source: generator.proto

package generatorclient

import (
	"context"

	"rsapi/devtoys/rpc/generator/generator"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = generator.Request
	Response = generator.Response

	Generator interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultGenerator struct {
		cli zrpc.Client
	}
)

func NewGenerator(cli zrpc.Client) Generator {
	return &defaultGenerator{
		cli: cli,
	}
}

func (m *defaultGenerator) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := generator.NewGeneratorClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
