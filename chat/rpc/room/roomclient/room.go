// Code generated by goctl. DO NOT EDIT.
// Source: room.proto

package roomclient

import (
	"context"

	"rsapi/chat/rpc/room/room"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = room.Request
	Response = room.Response

	Room interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultRoom struct {
		cli zrpc.Client
	}
)

func NewRoom(cli zrpc.Client) Room {
	return &defaultRoom{
		cli: cli,
	}
}

func (m *defaultRoom) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := room.NewRoomClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
