// Code generated by goctl. DO NOT EDIT.
// Source: parser.proto

package parserclient

import (
	"context"

	"rsapi/converter/rpc/parser/parser"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = parser.Request
	Response = parser.Response

	Parser interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultParser struct {
		cli zrpc.Client
	}
)

func NewParser(cli zrpc.Client) Parser {
	return &defaultParser{
		cli: cli,
	}
}

func (m *defaultParser) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := parser.NewParserClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
